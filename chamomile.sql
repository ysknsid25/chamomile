--木構造を取得するSQL
select subsysm.SUBSYSTEM_NAME,
	groupm.TBL_GRUOP_NAME,
	tree. *
from TBL_SUBSYSTEM_M subsysm,
	TBL_GROUP_M groupm,
	(select re.GROUP_ID,
		re.MY_NAME,
		re.PEARENT_TBL,
		Level
	from PC_TBL_RERATION re start with re.PEARENT_TBL is null connect by prior re.MY_NAME
		 = re.PEARENT_TBL) tree
where subsysm.SUBSYSTEM_ID = groupm.SUBSYSTEM_ID
and groupm.GROUP_ID = tree.GROUP_ID;


--テーブルグループマスタ
CREATE TABLE NOMOS.TBL_GROUP_M (
	SUBSYSTEM_ID		VARCHAR2(5),
	GROUP_ID				VARCHAR2(5)		NOT NULL,
	TBL_GRUOP_NAME	VARCHAR2(100)	NOT NULL,
	CONSTRAINT TBL_GROUP_M PRIMARY KEY(SUBSYSTEM_ID, GROUP_ID)
);

--親子関係テーブル
CREATE TABLE NOMOS.PC_TBL_RERATION (
	GROUP_ID		VARCHAR2(5) NOT NULL ,
	MY_NAME		VARCHAR2(25) NOT NULL ,
	PEARENT_TBL	VARCHAR2(25)

);

--サブシステムマスタ
CREATE TABLE NOMOS.TBL_SUBSYSTEM_M (
	SUBSYSTEM_ID		VARCHAR2(5),
	SUBSYSTEM_NAME	VARCHAR2(100)	NOT NULL,
	CONSTRAINT PK_TBL_SUBSYSTEM_M PRIMARY KEY(SUBSYSTEM_ID)
);

--サブシステムデータの作成
insert into TBL_SUBSYSTEM_M
(SUBSYSTEM_ID, SUBSYSTEM_NAME)
values('SUB01', 'サブシステム1');
insert into TBL_SUBSYSTEM_M
(SUBSYSTEM_ID, SUBSYSTEM_NAME)
values('SUB02', 'サブシステム2');

--グループデータの作成
insert into TBL_GROUP_M
(SUBSYSTEM_ID, GROUP_ID, TBL_GRUOP_NAME)
values('SUB01', 'GRP01', 'テストグループ1');
insert into TBL_GROUP_M
(SUBSYSTEM_ID, GROUP_ID, TBL_GRUOP_NAME)
values('SUB01', 'GRP02', 'テストグループ2');

--親子関係の作成
insert into PC_TBL_RERATION
(GROUP_ID, MY_NAME, PEARENT_TBL)
values('GRP01', 'TEST1', '');
insert into PC_TBL_RERATION
(GROUP_ID, MY_NAME, PEARENT_TBL)
values('GRP01', 'TEST2', '');
insert into PC_TBL_RERATION
(GROUP_ID, MY_NAME, PEARENT_TBL)
values('GRP01', 'TEST3', 'TEST1');
insert into PC_TBL_RERATION
(GROUP_ID, MY_NAME, PEARENT_TBL)
values('GRP01', 'TEST4', 'TEST1');
insert into PC_TBL_RERATION
(GROUP_ID, MY_NAME, PEARENT_TBL)
values('GRP01', 'TEST5', 'TEST4');


--テスト用のテーブル
CREATE TABLE TEST1(

	ROW1 VARCHAR2(10),
	ROW2 VARCHAR2(10),
	ROW3 VARCHAR2(10),
	ROW4 VARCHAR2(10),
	ROW5 VARCHAR2(10),
	CONSTRAINT PK_TEST1 PRIMARY KEY (ROW1, ROW2)

)

CREATE TABLE TEST2(

	ROW1 VARCHAR2(10),
	ROW2 VARCHAR2(10),
	ROW3 VARCHAR2(10),
	ROW4 VARCHAR2(10),
	ROW5 VARCHAR2(10),
	CONSTRAINT PK_TEST2 PRIMARY KEY (ROW1, ROW2)

)

CREATE TABLE TEST3(

	ROW1 VARCHAR2(10),
	ROW2 VARCHAR2(10),
	ROW3 VARCHAR2(10),
	ROW4 VARCHAR2(10),
	ROW5 VARCHAR2(10),
	CONSTRAINT PK_TEST3 PRIMARY KEY (ROW1, ROW2)

)

CREATE TABLE TEST5(

	ROW1 VARCHAR2(10),
	ROW2 VARCHAR2(10),
	ROW3 VARCHAR2(10),
	ROW4 VARCHAR2(10),
	ROW5 VARCHAR2(10),
	CONSTRAINT PK_TEST5 PRIMARY KEY (ROW1)

)

CREATE TABLE TEST4(

	ROW1 VARCHAR2(10),
	ROW2 VARCHAR2(10),
	ROW3 VARCHAR2(10),
	ROW4 VARCHAR2(10),
	ROW5 VARCHAR2(10),
	CONSTRAINT PK_TEST4 PRIMARY KEY (ROW1)

)
